# Generated by Django 5.1.1 on 2024-09-23 06:23

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="CardAssignmentid",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "user_type",
                    models.CharField(
                        choices=[("P", "Parent"), ("E", "Employee"), ("S", "Student")],
                        default="S",
                        help_text="Le type d'utilisateur: Parent, Employé, ou Étudiant.",
                        max_length=1,
                    ),
                ),
                (
                    "unique_code",
                    models.CharField(
                        help_text="Le numéro unique d'attribution de carte pour chaque utilisateur.",
                        max_length=20,
                        unique=True,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("assigned", "Attribué"),
                            ("unassigned", "Non Attribué"),
                        ],
                        default="assigned",
                        help_text="Le statut de l'attribution (Attribué ou Non Attribué).",
                        max_length=10,
                    ),
                ),
                ("assigned_on", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="CardConfiguration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                (
                    "configuration_type",
                    models.CharField(
                        choices=[("default", "Défaut"), ("custom", "Personnalisé")],
                        default="default",
                        max_length=20,
                    ),
                ),
                ("authentication_key_encrypted", models.BinaryField()),
                ("sector", models.IntegerField(default=8)),
                ("access_bits_encrypted", models.BinaryField(blank=True, null=True)),
                ("trailer_block_encrypted", models.BinaryField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="UnassignedCard",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("card_uid", models.CharField(max_length=50, unique=True)),
                (
                    "card_type",
                    models.CharField(
                        choices=[
                            ("MIFARE Classic 1K", "MIFARE Classic 1K"),
                            ("MIFARE Classic 4K", "MIFARE Classic 4K"),
                            ("MIFARE Ultralight", "MIFARE Ultralight"),
                        ],
                        max_length=50,
                    ),
                ),
                ("added_date", models.DateTimeField(auto_now_add=True)),
                ("is_assigned", models.BooleanField(default=False)),
                ("available_sectors", models.JSONField(blank=True, null=True)),
                (
                    "default_authentication_key_encrypted",
                    models.BinaryField(blank=True, null=True),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SystemUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("username", models.CharField(max_length=150, unique=True)),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="email address"
                    ),
                ),
                ("nom", models.CharField(max_length=255)),
                ("prenom", models.CharField(max_length=255)),
                ("telephone", models.CharField(max_length=20)),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("administrator", "Administrateur"),
                            ("receptionist", "Réceptionniste"),
                            ("driver", "Chauffeur"),
                        ],
                        max_length=20,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="CardInfo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("card_uid", models.CharField(max_length=50, unique=True)),
                ("authentication_key_encrypted", models.BinaryField()),
                ("secret_code_encrypted", models.BinaryField()),
                ("sector", models.IntegerField(default=8)),
                ("subscription_type", models.CharField(max_length=50)),
                ("expiration_date", models.DateField()),
                (
                    "card_assignment",
                    models.ForeignKey(
                        blank=True,
                        help_text="L'attribution de carte associée à cette carte.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="reader.cardassignmentid",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PassengerUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "passengerid",
                    models.CharField(blank=True, max_length=7, null=True, unique=True),
                ),
                ("username", models.CharField(max_length=150, unique=True)),
                ("nom", models.CharField(default="Default Name", max_length=255)),
                ("prenom", models.CharField(default="Default prenom", max_length=255)),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("password", models.CharField(max_length=128)),
                (
                    "type_utilisateur",
                    models.CharField(
                        choices=[
                            ("parent", "Parent"),
                            ("etudiant", "Étudiant"),
                            ("employee", "Employé"),
                            ("special", "Spécial"),
                        ],
                        default="etudiant",
                        max_length=20,
                    ),
                ),
                (
                    "account_status",
                    models.CharField(
                        choices=[
                            ("active", "Actif"),
                            ("inactive", "Inactif"),
                            ("suspended", "Suspendu"),
                            ("pending", "En attente"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "sex",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("male", "Homme"),
                            ("female", "Femme"),
                            ("other", "Autre"),
                        ],
                        max_length=10,
                        null=True,
                    ),
                ),
                ("date_of_birth", models.DateField(blank=True, null=True)),
                ("address", models.CharField(blank=True, max_length=255, null=True)),
                ("telephone", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "profile_picture",
                    models.ImageField(
                        blank=True, null=True, upload_to="profile_pictures/"
                    ),
                ),
                ("otp", models.CharField(blank=True, max_length=6, null=True)),
                ("otp_created_at", models.DateTimeField(blank=True, null=True)),
                ("email_verified", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "constraints": [
                    models.UniqueConstraint(
                        fields=("passengerid",), name="unique_passengerid"
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="PassengerCard",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "card_info",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="reader.cardinfo",
                    ),
                ),
                (
                    "passenger_user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="reader.passengeruser",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SubscriptionPlan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "user_type",
                    models.CharField(
                        choices=[
                            ("parent", "Parent"),
                            ("employee", "Employé"),
                            ("student", "Étudiant"),
                            ("special", "Spécial"),
                        ],
                        max_length=20,
                    ),
                ),
                ("circuit", models.CharField(max_length=50)),
                ("locality", models.CharField(max_length=100)),
                (
                    "duration",
                    models.CharField(
                        choices=[("monthly", "Mensuel"), ("quarterly", "Trimestriel")],
                        max_length=20,
                    ),
                ),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "registration_fee",
                    models.DecimalField(
                        decimal_places=2, default=1000.0, max_digits=10
                    ),
                ),
            ],
            options={
                "unique_together": {("user_type", "circuit", "locality", "duration")},
            },
        ),
        migrations.CreateModel(
            name="Subscription",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "payment_method",
                    models.CharField(
                        choices=[
                            ("cash", "Cash"),
                            ("moncash", "MonCash Digicel"),
                            ("natcash", "NatCash Natcom"),
                            ("credit_card", "Carte de Crédit/Débit"),
                        ],
                        default="cash",
                        max_length=50,
                    ),
                ),
                (
                    "renewal_type",
                    models.CharField(
                        choices=[("auto", "Automatique"), ("manual", "Manuel")],
                        default="manual",
                        max_length=50,
                    ),
                ),
                ("start_date", models.DateField(default=django.utils.timezone.now)),
                ("end_date", models.DateField()),
                ("is_active", models.BooleanField(default=True)),
                ("auto_renew", models.BooleanField(default=False)),
                ("payment_received", models.BooleanField(default=False)),
                (
                    "passenger_user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="reader.passengeruser",
                    ),
                ),
                (
                    "plan",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="reader.subscriptionplan",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Transaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "transaction_type",
                    models.CharField(
                        choices=[("card_creation", "Création de carte")], max_length=50
                    ),
                ),
                (
                    "payment_method",
                    models.CharField(
                        choices=[
                            ("cash", "Cash"),
                            ("moncash", "MonCash Digicel"),
                            ("natcash", "NatCash Natcom"),
                            ("credit_card", "Carte de Crédit/Débit"),
                        ],
                        default="cash",
                        max_length=50,
                    ),
                ),
                ("amount", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "transaction_date",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("is_successful", models.BooleanField(default=True)),
                ("details", models.TextField(blank=True, null=True)),
                (
                    "passenger_user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="reader.passengeruser",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TravelTransaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "transaction_date",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("is_approved", models.BooleanField()),
                ("reason", models.CharField(blank=True, max_length=255, null=True)),
                ("location", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "card_info",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="reader.cardinfo",
                    ),
                ),
                (
                    "passenger_user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="reader.passengeruser",
                    ),
                ),
                (
                    "processed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CardOperation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "operation_type",
                    models.CharField(
                        choices=[
                            ("configure", "Configuration"),
                            ("change_security", "Changement de sécurité"),
                            ("erase", "Effacement"),
                            ("read", "Lecture"),
                            ("write", "Écriture"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "operation_date",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("success", models.BooleanField(default=True)),
                ("details", models.TextField(blank=True, null=True)),
                (
                    "card_info",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="reader.cardinfo",
                    ),
                ),
                (
                    "configuration",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="reader.cardconfiguration",
                    ),
                ),
                (
                    "performed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "unassigned_card",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="reader.unassignedcard",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CardAssignment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("assigned_date", models.DateTimeField(auto_now_add=True)),
                (
                    "card_info",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="assignment",
                        to="reader.cardinfo",
                    ),
                ),
                (
                    "unassigned_card",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="assignment",
                        to="reader.unassignedcard",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Parent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nom_parent", models.CharField(max_length=255)),
                (
                    "student",
                    models.ForeignKey(
                        limit_choices_to={"type_utilisateur": "etudiant"},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="parent",
                        to="reader.passengeruser",
                    ),
                ),
            ],
            options={
                "unique_together": {("student", "nom_parent")},
            },
        ),
    ]
